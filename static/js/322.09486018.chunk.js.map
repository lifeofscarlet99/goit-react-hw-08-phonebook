{"version":3,"file":"static/js/322.09486018.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","components/GoBack/GoBack.styled.js","components/GoBack/GoBack.jsx","components/ContactForm/ContactForm.jsx","hooks/useChangeContactForm.js","pages/ChangeContactPage.jsx","utilities/validationSchema.js"],"sourcesContent":["import styled from \"@emotion/styled\";\nimport { Field } from \"formik\";\n\nexport const TitlePage = styled.h2`\n  margin-bottom: 30px;\n  text-transform: uppercase;\n  font-weight: 900;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n`;\n\nexport const Title = styled.span`\n  font-weight: 600;\n  color: var(--main-text-color);\n  margin-bottom: 5px;\n`;\n\nexport const StyledField = styled(Field)`\n  height: 40px;\n  padding: 0 10px 0 10px;\n  border-radius: 10px;\n  outline: none;\n  color: var(--main-text-color);\n  font-size: 14px;\n  :focus {\n    border-color: var(--accent-bg-color);\n  }\n  ::placeholder {\n    font-size: 12px;\n    color: var(--main-text-color);\n  }\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 200px;\n  height: 40px;\n  background-color: var(--accent-bg-color);\n  color: var(--second-text-color);\n  font-family: inherit;\n  border: none;\n  border-radius: 10px;\n  cursor: pointer;\n  transition: background-color var(--main-hover-animation);\n  :hover,\n  :focus {\n    background-color: var(--second-bg-color);\n  }\n  @media screen and (min-width: 768px) {\n    width: 300px;\n  }\n`;\n","import styled from \"@emotion/styled\";\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 30px;\n  padding: 10px 25px 10px 25px;\n  background-color: var(--second-bg-color);\n  color: var(--second-text-color);\n  font-family: inherit;\n  border: none;\n  border-radius: 10px;\n  cursor: pointer;\n  transition: background-color var(--main-hover-animation);\n  :hover,\n  :focus {\n    background-color: var(--accent-bg-color);\n  }\n`;\n\nexport const Label = styled.span`\n  margin-left: 10px;\n`;\n","import propTypes from \"prop-types\";\nimport { FaLongArrowAltLeft } from \"react-icons/fa\";\nimport { Button, Label } from \"./GoBack.styled\";\nimport { useNavigate } from \"react-router-dom\";\n\nfunction GoBack({ text, path }) {\n  const navigate = useNavigate();\n  const goToPage = () => navigate(path);\n\n  return (\n    <Button type=\"button\" onClick={goToPage}>\n      <FaLongArrowAltLeft />\n      <Label>{text}</Label>\n    </Button>\n  );\n}\n\nGoBack.prototype = {\n  label: propTypes.string,\n  path: propTypes.string,\n};\n\nexport default GoBack;\n","import propTypes from \"prop-types\";\nimport {\n  TitlePage,\n  Label,\n  Title,\n  StyledField,\n  Button,\n} from \"./ContactForm.styled\";\nimport { Formik, Form, ErrorMessage } from \"formik\";\nimport GoBack from \"components/GoBack\";\n\nfunction ContactForm({\n  title,\n  initialValues,\n  onSubmitForm,\n  validationSchema,\n  buttonLabel,\n}) {\n  return (\n    <>\n      <TitlePage>{title}</TitlePage>\n      <GoBack text=\"Contact list\" path=\"/contacts\" />\n      <Formik\n        initialValues={initialValues}\n        onSubmit={onSubmitForm}\n        validationSchema={validationSchema}\n      >\n        {({ values, handleChange, handleSubmit, isSubmitting }) => (\n          <Form onSubmit={handleSubmit}>\n            <Label>\n              <Title>Name</Title>\n              <StyledField\n                type=\"text\"\n                name=\"name\"\n                onChange={handleChange}\n                value={values.name}\n              />\n              <ErrorMessage name=\"name\" component=\"div\" />\n            </Label>\n            <Label>\n              <Title>Number</Title>\n              <StyledField\n                type=\"tel\"\n                name=\"number\"\n                onChange={handleChange}\n                value={values.number}\n              />\n              <ErrorMessage name=\"number\" component=\"div\" />\n            </Label>\n            <Button type=\"submit\" disabled={isSubmitting}>\n              {isSubmitting ? \"...\" : buttonLabel}\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </>\n  );\n}\n\nContactForm.prototype = {\n  title: propTypes.string,\n  initialValues: propTypes.shape({\n    name: propTypes.string,\n    number: propTypes.string,\n  }),\n  onSubmitForm: propTypes.func,\n  validationSchema: propTypes.shape({\n    name: propTypes.func,\n    number: propTypes.func,\n  }),\n  buttonLabel: propTypes.string,\n};\n\nexport default ContactForm;\n","import { useParams, useNavigate } from \"react-router-dom\";\nimport {\n  useChangeContactMutation,\n  useGetContactsQuery,\n} from \"redux/contacts/contact-api\";\nimport { Notify } from \"notiflix/build/notiflix-notify-aio\";\n\nfunction useChangeContactForm() {\n  let currentContact = null;\n  let initialValues = null;\n\n  const { contactId } = useParams();\n  const navigate = useNavigate();\n\n  const [chengeContact, { isLoading: isUpdating }] = useChangeContactMutation();\n  const { data: contacts } = useGetContactsQuery();\n\n  if (contacts) {\n    currentContact = contacts.find(({ id }) => id === contactId);\n\n    initialValues = {\n      name: currentContact.name,\n      number: currentContact.number,\n    };\n  }\n\n  const onSubmitForm = (values) => {\n    if (JSON.stringify(values) === JSON.stringify(initialValues)) {\n      Notify.warning(\"Try to change something first.\");\n      return;\n    }\n    chengeContact({ contactId, ...values });\n    navigate(\"/contacts\");\n    Notify.success(\"The contact has been successfully changed.\");\n  };\n\n  return { isUpdating, onSubmitForm, initialValues };\n}\n\nexport default useChangeContactForm;\n","import Container from \"components/Container\";\nimport ContactForm from \"components/ContactForm\";\nimport useChangeContactForm from \"hooks/useChangeContactForm\";\nimport { contactSchema } from \"utilities/validationSchema\";\n\nfunction ChangeContactPage() {\n  const { onSubmitForm, initialValues } = useChangeContactForm();\n\n  return (\n    <Container>\n      <ContactForm\n        title={`Edit Contact ${initialValues.name}`}\n        initialValues={initialValues}\n        onSubmitForm={onSubmitForm}\n        validationSchema={contactSchema}\n        buttonLabel=\"Change contact\"\n      />\n    </Container>\n  );\n}\n\nexport default ChangeContactPage;\n","import * as yup from \"yup\";\n\nexport const contactSchema = yup.object({\n  name: yup.string().required().min(3).max(30),\n  number: yup.number().required(),\n});\n\nexport const userLoginSchema = yup.object({\n  email: yup.string().required().email(),\n  password: yup.string().required().min(7).max(14),\n});\n\nexport const userRegisterSchema = yup.object({\n  name: yup.string().required().min(3).max(30),\n  email: yup.string().required().email(),\n  password: yup.string().required().min(7).max(14),\n});\n"],"names":["TitlePage","styled","Label","Title","StyledField","Field","Button","GoBack","text","path","navigate","useNavigate","type","onClick","prototype","label","propTypes","ContactForm","title","initialValues","onSubmitForm","validationSchema","buttonLabel","onSubmit","values","handleChange","handleSubmit","isSubmitting","name","onChange","value","component","number","disabled","currentContact","contactId","useParams","useChangeContactMutation","chengeContact","isUpdating","isLoading","contacts","useGetContactsQuery","data","find","id","JSON","stringify","Notify","useChangeContactForm","Container","contactSchema","yup","required","min","max","userLoginSchema","email","password","userRegisterSchema"],"sourceRoot":""}