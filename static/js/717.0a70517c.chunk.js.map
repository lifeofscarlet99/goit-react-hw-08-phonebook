{"version":3,"file":"static/js/717.0a70517c.chunk.js","mappings":"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","sources":["components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/Contact/Contact.styled.js","components/Modal/Modal.styled.js","components/Modal/Modal.jsx","hooks/useShowModal.js","components/DeletingContact/DeletingContact.styled.js","hooks/useDeletingContact.js","components/DeletingContact/DeletingContact.jsx","components/Contact/Contact.jsx","components/ContactList/ContactList.styled.js","hooks/useFiltredContacts.js","redux/contacts/contact-selectors.js","components/ContactList/ContactList.jsx","components/Message/Message.styled.js","components/Message/Message.jsx","components/AddButton/AddButton.styled.js","components/AddButton/AddButton.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: 50px;\n`;\n\nexport const Text = styled.p`\n  font-weight: 600;\n  color: var(--main-text-color);\n  margin-bottom: 5px;\n`;\n\nexport const Input = styled.input`\n  width: 95%;\n  height: 40px;\n  padding: 0 10px 0 10px;\n  border: 1px solid var(--second-bg-color);\n  outline: none;\n  border-radius: 10px;\n  color: var(--main-text-color);\n  font-size: 14px;\n  :focus {\n    border-color: var(--accent-bg-color);\n  }\n  ::placeholder {\n    font-size: 12px;\n    color: var(--main-text-color);\n  }\n`;\n","import { useDispatch } from \"react-redux\";\nimport { Label, Text, Input } from \"./Filter.styled\";\nimport { changeFilter } from \"redux/contacts/contacts-slice\";\n\nfunction Filter() {\n  const dispatch = useDispatch();\n\n  const changeFieldFilter = (e) => {\n    const value = e.currentTarget.value;\n    dispatch(changeFilter(value));\n  };\n\n  return (\n    <Label>\n      <Text>Find contacts by name</Text>\n      <Input type=\"text\" onChange={changeFieldFilter} name=\"filter\" />\n    </Label>\n  );\n}\n\nexport default Filter;\n","import styled from \"@emotion/styled\";\nimport { FaUser } from \"react-icons/fa\";\n\nexport const Wrapper = styled.div`\n  background-color: #fafafa;\n  border-radius: 10px;\n  border: 1px solid #f2f2f2;\n  padding: 10px;\n  @media screen and (min-width: 768px) {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n  }\n`;\n\nexport const NameWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nexport const IconUser = styled(FaUser)`\n  background-color: var(--accent-bg-color);\n  color: var(--main-bg-color);\n  margin-right: 30px;\n  padding: 10px;\n`;\n\nexport const Name = styled.p`\n  font-size: 18px;\n  color: var(--second-bg-color);\n`;\n\nexport const Number = styled.p`\n  text-align: center;\n`;\n\nexport const ButtonList = styled.ul`\n  display: flex;\n  align-items: center;\n  justify-content: space-evenly;\n`;\n\nexport const ButtonItem = styled.li`\n  margin-right: 5px;\n  &:last-child {\n    margin-right: 0;\n  }\n`;\n\nexport const Button = styled.button`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  width: 40px;\n  height: 30px;\n  padding: 10px;\n  border: none;\n  border-radius: 10px;\n  background-color: transparent;\n  color: var(--accent-bg-color);\n  cursor: pointer;\n  transition: color var(--main-hover-animation);\n  :hover,\n  :focus {\n    color: var(--second-bg-color);\n  }\n`;\n","import styled from \"@emotion/styled\";\n\nexport const Backdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: var(--backdrop-bg-color);\n`;\n\nexport const ModalWrapper = styled.div`\n  position: relative;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 280px;\n  height: auto;\n  padding: 10px;\n  background-color: var(--main-bg-color);\n  color: var(--main-text-color);\n  @media screen and (min-width: 768px) {\n    width: 600px;\n    padding: 30px;\n  }\n  @media screen and (min-width: 1440px) {\n    padding: 50px;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border-bottom: 1px solid var(--accent-bg-color);\n  margin-bottom: 25px;\n  padding-bottom: 15px;\n  @media screen and (min-width: 768px) {\n    margin-bottom: 35px;\n    padding-bottom: 25px;\n  }\n`;\n\nexport const Title = styled.h2`\n  font-size: 20px;\n  font-weight: 900;\n  text-transform: uppercase;\n  @media screen and (min-width: 768px) {\n    font-size: 30px;\n  }\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 30px;\n  height: 30px;\n  background-color: var(--second-bg-color);\n  color: var(--second-text-color);\n  font-family: inherit;\n  border: none;\n  cursor: pointer;\n  transition: background-color var(--main-hover-animation);\n  :hover,\n  :focus {\n    background-color: var(--accent-bg-color);\n  }\n  @media screen and (min-width: 768px) {\n    width: 40px;\n    height: 40px;\n  }\n`;\n","import PropTypes from \"prop-types\";\nimport { useEffect } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { AiOutlineClose } from \"react-icons/ai\";\nimport { Backdrop, ModalWrapper, Wrapper, Title, Button } from \"./Modal.styled\";\n\nconst modalRoot = document.querySelector(\"#modal-root\");\n\nfunction Modal({ children, onClose, title }) {\n  useEffect(() => {\n    const onPessKeyDown = (e) => {\n      if (e.code === \"Escape\") {\n        onClose();\n      }\n    };\n\n    window.addEventListener(\"keydown\", onPessKeyDown);\n\n    return () => window.removeEventListener(\"keydown\", onPessKeyDown);\n  }, [onClose]);\n\n  const onBackdropClick = (e) => {\n    if (e.target === e.currentTarget) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <Backdrop onClick={onBackdropClick}>\n      <ModalWrapper>\n        <Wrapper>\n          <Title>{title}</Title>\n          <Button type=\"button\" onClick={onClose}>\n            <AiOutlineClose />\n          </Button>\n        </Wrapper>\n        {children}\n      </ModalWrapper>\n    </Backdrop>,\n    modalRoot\n  );\n}\n\nModal.prototype = {\n  children: PropTypes.element,\n  onClose: PropTypes.func.isRequired,\n  title: PropTypes.string,\n};\n\nexport default Modal;\n","import { useState } from \"react\";\n\nfunction useShowModal(option) {\n  const [showModal, setShowModal] = useState(option);\n  const toggleModal = () => setShowModal((prevState) => !prevState);\n\n  return { toggleModal, showModal };\n}\n\nexport default useShowModal;\n","import styled from \"@emotion/styled\";\n\nexport const Text = styled.p`\n  font-size: 20px;\n  margin-bottom: 30px;\n`;\n\nexport const Name = styled.span`\n  color: red;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  justify-content: right;\n`;\n\nexport const Item = styled.li`\n  margin-right: 10px;\n  :last-child {\n    margin-right: 0;\n  }\n`;\n\nexport const ButtonCancel = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100px;\n  height: 30px;\n  background-color: var(--second-bg-color);\n  color: var(--second-text-color);\n  font-family: inherit;\n  border: none;\n  border-radius: 10px;\n  cursor: pointer;\n  transition: background-color var(--main-hover-animation);\n  :hover,\n  :focus {\n    background-color: var(--accent-bg-color);\n  }\n`;\n\nexport const ButtonDelete = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100px;\n  height: 30px;\n  background-color: red;\n  color: var(--second-text-color);\n  font-family: inherit;\n  border: none;\n  cursor: pointer;\n  transition: background-color var(--main-hover-animation);\n  :hover,\n  :focus {\n    background-color: var(--accent-bg-color);\n  }\n`;\n","import { useNavigate } from \"react-router-dom\";\nimport { useDeleteContactMutation } from \"redux/contacts/contact-api\";\nimport { Notify } from \"notiflix/build/notiflix-notify-aio\";\n\nfunction useDeletingContact(id, name, toggleModal) {\n  const navigate = useNavigate();\n  const [deleteContact, { isLoading: isDeleting }] = useDeleteContactMutation();\n\n  const deleteSelectedContact = () => {\n    deleteContact(id);\n    navigate(\"/contacts\");\n    toggleModal();\n    Notify.success(`The ${name} has been removed from your contact list.`);\n  };\n\n  return { isDeleting, deleteSelectedContact };\n}\n\nexport default useDeletingContact;\n","import PropTypes from \"prop-types\";\nimport {\n  Text,\n  Name,\n  List,\n  Item,\n  ButtonCancel,\n  ButtonDelete,\n} from \"./DeletingContact.styled\";\nimport useDeletingContact from \"hooks/useDeletingContact\";\n\nfunction DeletingContact({ id, name, toggleModal }) {\n  const { isDeleting, deleteSelectedContact } = useDeletingContact(\n    id,\n    name,\n    toggleModal\n  );\n\n  return (\n    <>\n      <Text>\n        Are you sure you want to delete a contact <Name>{name}</Name>?\n      </Text>\n      <List>\n        <Item>\n          <ButtonCancel type=\"button\" onClick={toggleModal}>\n            Cancel\n          </ButtonCancel>\n        </Item>\n        <Item>\n          <ButtonDelete type=\"button\" onClick={deleteSelectedContact}>\n            {isDeleting ? \"...\" : \"Delete\"}\n          </ButtonDelete>\n        </Item>\n      </List>\n    </>\n  );\n}\n\nDeletingContact.prototype = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  togleModal: PropTypes.func.isRequired,\n};\n\nexport default DeletingContact;\n","import PropTypes from \"prop-types\";\nimport { FaTrash, FaUserEdit } from \"react-icons/fa\";\nimport {\n  Wrapper,\n  NameWrapper,\n  IconUser,\n  Name,\n  Number,\n  ButtonList,\n  ButtonItem,\n  Button,\n} from \"./Contact.styled\";\nimport Modal from \"components/Modal\";\nimport useShowModal from \"hooks/useShowModal\";\nimport DeletingContact from \"components/DeletingContact\";\nimport { useNavigate } from \"react-router-dom\";\n\nfunction Contact({ id, name, number }) {\n  const { showModal, toggleModal } = useShowModal(false);\n  const navigate = useNavigate();\n\n  return (\n    <>\n      {showModal && (\n        <Modal onClose={toggleModal} title={name}>\n          <DeletingContact id={id} name={name} toggleModal={toggleModal} />\n        </Modal>\n      )}\n\n      <Wrapper>\n        <NameWrapper>\n          <IconUser />\n          <Name>{name}</Name>\n        </NameWrapper>\n\n        <Number>{number}</Number>\n\n        <ButtonList>\n          <ButtonItem>\n            <Button type=\"button\" onClick={toggleModal}>\n              <FaTrash />\n            </Button>\n          </ButtonItem>\n          <ButtonItem>\n            <Button type=\"button\" onClick={() => navigate(`edit/${id}`)}>\n              <FaUserEdit />\n            </Button>\n          </ButtonItem>\n        </ButtonList>\n      </Wrapper>\n    </>\n  );\n}\n\nContact.prototype = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n\nexport default Contact;\n","import styled from \"@emotion/styled\";\n\nexport const List = styled.ul``;\n\nexport const Item = styled.li`\n  margin-bottom: 20px;\n`;\n","import { useGetContactsQuery } from \"redux/contacts/contact-api\";\nimport { useSelector } from \"react-redux\";\nimport { getFilter } from \"redux/contacts/contact-selectors\";\n\nfunction useFiltredContacts() {\n  const { data: contacts } = useGetContactsQuery();\n  const { filter } = useSelector((state) => getFilter(state));\n\n  const filtredContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return (\n      contacts &&\n      contacts.filter((contact) =>\n        contact.name.toLowerCase().includes(normalizedFilter)\n      )\n    );\n  };\n\n  const filteredContactList = filtredContacts();\n\n  return { filteredContactList };\n}\n\nexport default useFiltredContacts;\n","export const getFilter = (state) => state.contacts;\n","import Contact from \"components/Contact/Contact\";\nimport Loader from \"components/Loader\";\nimport NotFound from \"components/NotFound\";\nimport { List, Item } from \"./ContactList.styled\";\nimport { useGetContactsQuery } from \"redux/contacts/contact-api\";\nimport useFiltredContacts from \"hooks/useFiltredContacts\";\nimport { useEffect } from \"react\";\n\nfunction ContactList() {\n  const { data: contacts, isFetching, error, refetch } = useGetContactsQuery();\n  const { filteredContactList } = useFiltredContacts();\n\n  useEffect(() => {\n    refetch();\n  }, [refetch]);\n\n  return (\n    <>\n      {isFetching && <Loader />}\n      {error && <NotFound data={error.data} status={error.status} />}\n      <List>\n        {contacts &&\n          filteredContactList.map(({ id, name, number }) => {\n            return (\n              <Item key={id}>\n                <Contact id={id} name={name} number={number} />\n              </Item>\n            );\n          })}\n      </List>\n    </>\n  );\n}\n\nexport default ContactList;\n","import styled from \"@emotion/styled\";\n\nexport const Wrapper = styled.div`\n  text-align: center;\n`;\n\nexport const Text = styled.p`\n  font-weight: 600;\n  font-size: 25px;\n`;\n","import propTypes from \"prop-types\";\nimport { Wrapper, Text } from \"./Message.styled\";\n\nfunction Message({ message }) {\n  return (\n    <Wrapper>\n      <Text>{message}</Text>\n    </Wrapper>\n  );\n}\n\nMessage.prototype = {\n  message: propTypes.string,\n};\n\nexport default Message;\n","import styled from \"@emotion/styled\";\nimport { Link } from \"react-router-dom\";\n\nexport const Button = styled(Link)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 270px;\n  height: 40px;\n  margin-bottom: 50px;\n  background-color: var(--accent-bg-color);\n  color: var(--second-text-color);\n  font-family: inherit;\n  border: none;\n  border-radius: 10px;\n  cursor: pointer;\n  transition: background-color var(--main-hover-animation);\n  :hover,\n  :focus {\n    background-color: var(--second-bg-color);\n  }\n`;\n\nexport const ButtonText = styled.span`\n  margin-right: 10px;\n`;\n","import { Button, ButtonText } from \"./AddButton.styled\";\nimport { BsFillPersonPlusFill } from \"react-icons/bs\";\nimport propTypes from \"prop-types\";\n\nfunction AddButton({ text }) {\n  return (\n    <Button to=\"/contacts/add\">\n      <ButtonText>{text}</ButtonText>\n      <BsFillPersonPlusFill size={20} />\n    </Button>\n  );\n}\n\nAddButton.prototype = {\n  text: propTypes.string,\n};\n\nexport default AddButton;\n","import Container from \"components/Container\";\nimport Filter from \"components/Filter\";\nimport ContactList from \"components/ContactList\";\nimport Message from \"components/Message\";\nimport { useGetContactsQuery } from \"redux/contacts/contact-api\";\nimport AddButton from \"components/AddButton\";\n\nfunction ContactsPage() {\n  const { data: contacts } = useGetContactsQuery();\n\n  return (\n    <Container title=\"Contacts\">\n      <AddButton text=\"Add new contact\" />\n      <Filter />\n      {contacts && contacts.length > 0 ? (\n        <ContactList />\n      ) : (\n        <Message message=\"Contact list is empty.\" />\n      )}\n    </Container>\n  );\n}\n\nexport default ContactsPage;\n"],"names":["Label","styled","Text","Input","dispatch","useDispatch","type","onChange","e","value","currentTarget","changeFilter","name","Wrapper","NameWrapper","IconUser","FaUser","Name","Number","ButtonList","ButtonItem","Button","Backdrop","ModalWrapper","Title","modalRoot","document","querySelector","Modal","children","onClose","title","useEffect","onPessKeyDown","code","window","addEventListener","removeEventListener","createPortal","onClick","target","prototype","PropTypes","option","useState","showModal","setShowModal","toggleModal","prevState","List","Item","ButtonCancel","ButtonDelete","id","navigate","useNavigate","useDeleteContactMutation","deleteContact","isDeleting","isLoading","deleteSelectedContact","Notify","DeletingContact","useDeletingContact","togleModal","Contact","number","useShowModal","contacts","useGetContactsQuery","data","filter","useSelector","state","getFilter","filteredContactList","normalizedFilter","toLowerCase","contact","includes","filtredContacts","isFetching","error","refetch","useFiltredContacts","Loader","NotFound","status","map","Message","message","propTypes","Link","ButtonText","AddButton","text","to","size","Container","length"],"sourceRoot":""}